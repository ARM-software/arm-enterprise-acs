diff --git a/uefi-sct/SctPkg/CommonGenFramework.sh b/uefi-sct/SctPkg/CommonGenFramework.sh
index 299f0d62..96ec2fab 100755
--- a/uefi-sct/SctPkg/CommonGenFramework.sh
+++ b/uefi-sct/SctPkg/CommonGenFramework.sh
@@ -335,4 +335,72 @@ then
   CopyDependency Ebc
   CopyDependency PxeBaseCode
 fi
+# *********************************************
+# For SBBR v1.0 SCT
+# *********************************************
+
+if [ $1 = "sbbr_sct" ]
+then
+    # *********************************************
+    # Copy the SBBR v1.0 Test Cases
+    # *********************************************
+
+    mkdir -p $Framework/SCRT
+    cp $ProcessorType/SCRTDRIVER.efi                           $Framework/SCRT  > NUL
+    cp $ProcessorType/SCRTAPP.efi                              $Framework/SCRT  > NUL
+    cp ../../../SctPkg/Config/Data/SCRT.conf                   $Framework/SCRT  > NUL
+
+    # *********************************************
+    # Copy your test cases here
+    # *********************************************
+
+    # Boot Services Tests - SBBR v1.0 Appendix A
+    cp $ProcessorType/EventTimerTaskPriorityServicesBBTest.efi $Framework/Test/ > NUL
+    cp $ProcessorType/ImageServicesBBTest.efi                  $Framework/Test/ > NUL
+    cp $ProcessorType/MemoryAllocationServicesBBTest.efi       $Framework/Test/ > NUL
+    cp $ProcessorType/MiscBootServicesBBTest.efi               $Framework/Test/ > NUL
+    cp $ProcessorType/ProtocolHandlerServicesBBTest.efi        $Framework/Test/ > NUL
 
+    # Tests SBBR sections 3.3.1, 3.3.2, 3.3.3, and 3.3.4
+    cp $ProcessorType/SysEnvConfigBBTest.efi                   $Framework/Test/ > NUL
+
+    # UEFI Boot Services - SBBR v1.0 3.4
+    cp $ProcessorType/SbbrBootServicesBBTest.efi               $Framework/Test/ > NUL
+
+    # Check if EFI Specification Version is 2.5 or greater
+    cp $ProcessorType/EfiSpecVerLvlBBTest.efi                  $Framework/Test/ > NUL
+
+    # SMBIOS Requirements on UEFI - SBBR v1.0 5.1.1
+    cp $ProcessorType/SbbrSmbiosBBTest.efi                     $Framework/Test/ > NUL
+
+    # Runtime Services Tests - SBBR v1.0 Appendix B
+    cp $ProcessorType/VariableServicesBBTest.efi               $Framework/Test/ > NUL
+    cp $ProcessorType/TimeServicesBBTest.efi                   $Framework/Test/ > NUL
+    cp $ProcessorType/MiscRuntimeServicesBBTest.efi            $Framework/Test/ > NUL
+    cp $ProcessorType/SBBRRuntimeServicesBBTest.efi            $Framework/Test/ > NUL
+
+    # Tests SBBR Appendix C
+    cp $ProcessorType/RequiredUefiProtocolsBBTest.efi          $Framework/Test/ > NUL
+    cp $ProcessorType/EfiCompliantBBTest.efi                   $Framework/Test/ > NUL
+
+    cp $ProcessorType/GraphicsOutputBBTest.efi                 $Framework/Test/ > NUL
+    cp $ProcessorType/PciIoBBTest.efi                          $Framework/Test/ > NUL
+    cp $ProcessorType/PciRootBridgeIoBBTest.efi                $Framework/Test/ > NUL
+    cp $ProcessorType/DevicePathBBTest.efi                     $Framework/Test/ > NUL
+    # *********************************************
+    # Copy ENTS binary
+    # *********************************************
+
+    cp $ProcessorType/SerialMonitor.efi                $Framework/Ents/Support/ > NUL
+    cp $ProcessorType/ManagedNetworkMonitor.efi        $Framework/Ents/Support/ > NUL
+    cp $ProcessorType/IP4NetworkMonitor.efi            $Framework/Ents/Support/ > NUL
+    cp $ProcessorType/Eftp.efi                         $Framework/Ents/Support/ > NUL
+
+    # *********************************************
+    # Copy the test dependency files
+    # *********************************************
+
+    CopyDependency EfiCompliant
+    CopyDependency ProtocolHandlerServices
+    CopyDependency ImageServices
+fi
diff --git a/uefi-sct/SctPkg/Config/Data/Category.ini b/uefi-sct/SctPkg/Config/Data/Category.ini
index 3e9f5e52..b196abda 100644
--- a/uefi-sct/SctPkg/Config/Data/Category.ini
+++ b/uefi-sct/SctPkg/Config/Data/Category.ini
@@ -87,6 +87,34 @@ InterfaceGuid = 71652D04-BF38-434A-BCB8-6547D7FD8384
 Name          = GenericTest\FloatingPointABITest
 Description   =
 
+[Category Data]
+Revision      = 0x00010000
+CategoryGuid  = 6b4d5d18-f55f-4fc5-8496-f10022375c04
+InterfaceGuid = 71652D04-BF38-434A-BCB8-6547D7FD8384
+Name          = GenericTest\SbbrRequiredUefiProtocols
+Description   = Checks that UEFI protocols required by ARM SBBR are present.
+
+[Category Data] 
+Revision      = 0x00010000
+CategoryGuid  = d6e40d12-7a51-4454-b4fd-4c93887ed6cf
+InterfaceGuid = 71652D04-BF38-434A-BCB8-6547D7FD8384
+Name          = GenericTest\SbbrEfiSpecVerLvl
+Description   = Check the UEFI Specification Version Level to make sure it conforms to ARM SBBR.
+
+[Category Data]
+Revision      = 0x00010000
+CategoryGuid  = 852e92eb-d7aa-4d61-84ef-d32dc5d545ec
+InterfaceGuid = 71652D04-BF38-434A-BCB8-6547D7FD8384
+Name          = GenericTest\SbbrSmbios
+Description   = Checks that SMBIOS on UEFI is implemented correctly.
+
+[Category Data]
+Revision      = 0x00010000
+CategoryGuid  = D84A6430-99F5-4660-8454-6E4C896A7E51
+InterfaceGuid = 71652D04-BF38-434a-BCB8-6547D7FD8384
+Name          = GenericTest\SbbrSysEnvConfig
+Description   = SBBR UEFI System Environment and Configuration Tests
+
 [Category Data]
 Revision      = 0x00010000
 CategoryGuid  = E9EF7553-F833-4E56-96E8-38AE679523CC
@@ -129,6 +157,13 @@ InterfaceGuid = E9EF7553-F833-4E56-96E8-38AE679523CC
 Name          = BootServicesTest\MiscBootServicesTest
 Description   =
 
+[Category Data]
+Revision      = 0x00010000
+CategoryGuid  = 8dafd7a7-44d0-4cf4-9d28-9f87080fc091
+InterfaceGuid = E9EF7553-F833-4E56-96E8-38AE679523CC
+Name          = BootServicesTest\SbbrBootServices
+Description   = Tests SBBR boot services requirements.
+
 [Category Data]
 Revision      = 0x00010000
 CategoryGuid  = AFF115FB-387B-4C18-8C41-6AFC7F03BB90
@@ -164,6 +199,13 @@ InterfaceGuid = AFF115FB-387B-4C18-8C41-6AFC7F03BB90
 Name          = RuntimeServicesTest\MiscRuntimeServicesTest
 Description   =
 
+[Category Data]
+Revision      = 0x00010000
+CategoryGuid  = 52A69BBF-E19F-4e82-93D6-AAC46E2E1E06
+InterfaceGuid = AFF115FB-387B-4c18-8C41-6AFC7F03BB90
+Name          = RuntimeServicesTest\SBBRRuntimeServicesTest
+Description   = SBBR Runtime Services Tests
+
 [Category Data]
 Revision      = 0x00010000
 CategoryGuid  = 5B1B31A1-9562-11D2-8E3F-00A0C969723B
diff --git a/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ImageServices/BlackBoxTest/ImageBBTest.inf b/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ImageServices/BlackBoxTest/ImageBBTest.inf
index 49ad7991..c3b322e1 100644
--- a/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ImageServices/BlackBoxTest/ImageBBTest.inf
+++ b/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ImageServices/BlackBoxTest/ImageBBTest.inf
@@ -53,4 +53,5 @@
 
 [Protocols]
   gEfiTestProfileLibraryGuid
+  gEfiTestRecoveryLibraryGuid
   gBlackBoxEfiHIIPackageListProtocolGuid
diff --git a/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ImageServices/BlackBoxTest/ImageBBTestConformance.c b/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ImageServices/BlackBoxTest/ImageBBTestConformance.c
index 0a26d468..3925eead 100644
--- a/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ImageServices/BlackBoxTest/ImageBBTestConformance.c
+++ b/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ImageServices/BlackBoxTest/ImageBBTestConformance.c
@@ -778,6 +778,7 @@ BBTestExitBootServicesConsistencyTest (
   )
 {
   EFI_STANDARD_TEST_LIBRARY_PROTOCOL   *StandardLib;
+  EFI_TEST_RECOVERY_LIBRARY_PROTOCOL   *RecoveryLib;
   EFI_STATUS                           Status;
   EFI_TEST_ASSERTION                   AssertionType;
   UINTN                                MapKey;
@@ -786,6 +787,7 @@ BBTestExitBootServicesConsistencyTest (
   UINTN                                DataSize;
   UINT8                                Data[MAX_BUFFER_SIZE];
   EFI_STATUS                           ReturnStatus;
+  UINTN                                RecoveryData, RecoveryDataSize;
 
   //
   // Init
@@ -803,6 +805,19 @@ BBTestExitBootServicesConsistencyTest (
     return Status;
   }
 
+  //
+  // Get the Recovery Library Interface
+  //
+  RecoveryLib = NULL;
+
+  Status = gtBS->HandleProtocol (
+                   SupportHandle,
+                   &gEfiTestRecoveryLibraryGuid,
+                   (VOID **) &RecoveryLib);
+  if (EFI_ERROR(Status)) {
+    return Status;
+  }
+
   Status = ImageTestCheckForCleanEnvironment (&Numbers);
   if (EFI_ERROR(Status)) {
     StandardLib->RecordAssertion (
@@ -819,25 +834,13 @@ BBTestExitBootServicesConsistencyTest (
     return Status;
   }
 
-  DataSize = MAX_BUFFER_SIZE;
-  Status = gtRT->GetVariable (
-                 L"ExitBootServicesTestVariable",             // VariableName
-                 &gTestVendor1Guid,                           // VendorGuid
-                 NULL,                                        // Attributes
-                 &DataSize,                                   // DataSize
-                 &ReturnStatus                                // Data
-                 );
+  RecoveryDataSize = sizeof(RecoveryData);
+  Status = RecoveryLib->ReadResetRecord(RecoveryLib, &RecoveryDataSize, &RecoveryData);
 
-  if (Status == EFI_SUCCESS) {
-    goto CheckResult;
+  if (!EFI_ERROR(Status) && RecoveryData == 1) {
+      goto CheckResult;
   }
 
-  //
-  // Print out some information to avoid the user thought it is an error
-  //
-  SctPrint (L"System will cold reset after 2 second. please run this test again...");
-  gtBS->Stall (2000000);
-
   //
   // Checkpoint 1:
   // 3.5.2.1  ExitBootServices should not succeed with an invalid MapKey
@@ -864,15 +867,18 @@ BBTestExitBootServicesConsistencyTest (
 
   MapKey += MapKey;
 
+  RecoveryData = 1;
+  RecoveryLib->WriteResetRecord (RecoveryLib, sizeof(RecoveryData), &RecoveryData);
+
+  SctPrint (L"System will cold reset after 1 second. please run this test again...");
+
+  gtBS->Stall (1000000);
+
+
   ReturnStatus = gtBS->ExitBootServices (
                          mImageHandle,
                          MapKey
                          );
-  if (ReturnStatus == EFI_INVALID_PARAMETER) {
-    AssertionType = EFI_TEST_ASSERTION_PASSED;
-  } else {
-    AssertionType = EFI_TEST_ASSERTION_FAILED;
-  }
 
   Status = gtRT->SetVariable (
                      L"ExitBootServicesTestVariable",                                                           // VariableName
@@ -888,6 +894,32 @@ BBTestExitBootServicesConsistencyTest (
   // get var to get the status
 CheckResult:
 
+  DataSize = MAX_BUFFER_SIZE;
+
+  Status = gtRT->GetVariable (
+                 L"ExitBootServicesTestVariable",             // VariableName
+                 &gTestVendor1Guid,                           // VendorGuid
+                 NULL,                                        // Attributes
+                 &DataSize,                                   // DataSize
+                 &ReturnStatus                                // Data
+                 );
+
+
+  if (EFI_ERROR(Status)) {
+    AssertionType = EFI_TEST_ASSERTION_FAILED;
+    StandardLib->RecordAssertion (
+                 StandardLib,
+                 AssertionType,
+                 gConsistencyTestAssertionGuid009,
+                 L"BS.ExitBootServices - ConsistencyTestCheckpoint1",
+                 L"%a:%d: GetVariable service routine failed - %r",
+                 __FILE__,
+                 (UINTN)__LINE__,
+                 Status
+                 );
+    goto Done;
+  }
+
   if (ReturnStatus == EFI_INVALID_PARAMETER) {
     AssertionType = EFI_TEST_ASSERTION_PASSED;
   } else {
@@ -905,14 +937,7 @@ CheckResult:
                  ReturnStatus,
                  EFI_INVALID_PARAMETER
                  );
-
-  Status = gtRT->SetVariable (
-                     L"ExitBootServicesTestVariable",                                                           // VariableName
-                     &gTestVendor1Guid,                                                                         // VendorGuid
-                     EFI_VARIABLE_NON_VOLATILE | EFI_VARIABLE_BOOTSERVICE_ACCESS | EFI_VARIABLE_RUNTIME_ACCESS, // Attributes
-                     0,                               // DataSize
-                     Data                             // Data
-                     );
+Done:
 
   Status = ImageTestCheckForCleanEnvironment (&Numbers);
   if (EFI_ERROR(Status)) {
@@ -930,4 +955,3 @@ CheckResult:
   }
   return EFI_SUCCESS;
 }
-
diff --git a/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ImageServices/BlackBoxTest/ImageBBTestFunction.c b/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ImageServices/BlackBoxTest/ImageBBTestFunction.c
index 11f78cd4..af4306a5 100644
--- a/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ImageServices/BlackBoxTest/ImageBBTestFunction.c
+++ b/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ImageServices/BlackBoxTest/ImageBBTestFunction.c
@@ -24,7 +24,7 @@ Abstract:
 
 --*/
 
-#include "SctLib.h"
+#include "SctLib.h"
 #include "Misc.h"
 
 extern EFI_GUID gBlackBoxEfiHIIPackageListProtocolGuid;
@@ -161,9 +161,9 @@ BBTestLoadImageInterfaceTest (
   //Checkpoint 8:
   //4.1.2.8  Call LoadImage to load image for HII protocol
   //
-  BBTestLoadImageInterfaceTestCheckPoint8(StandardLib);
+  //BBTestLoadImageInterfaceTestCheckPoint8(StandardLib);
 
-  BBTestLoadImageInterfaceTestCheckPoint9(StandardLib);
+  //BBTestLoadImageInterfaceTestCheckPoint9(StandardLib);
 #endif  
   return EFI_SUCCESS;
 }
diff --git a/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ImageServices/BlackBoxTest/Misc.h b/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ImageServices/BlackBoxTest/Misc.h
index 3e713f44..4bc0cd29 100644
--- a/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ImageServices/BlackBoxTest/Misc.h
+++ b/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ImageServices/BlackBoxTest/Misc.h
@@ -29,6 +29,7 @@ Abstract:
 
 #include "ImageBBTest.h"
 #include "ProtocolDefinition.h"
+#include EFI_TEST_PROTOCOL_DEFINITION(TestRecoveryLibrary)
 
 typedef struct {
   VOID          *Registration;
diff --git a/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/MemoryAllocationServices/BlackBoxTest/MemoryAllocationServicesBBTestConformance.c b/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/MemoryAllocationServices/BlackBoxTest/MemoryAllocationServicesBBTestConformance.c
index 1b81ecbc..ac70023c 100644
--- a/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/MemoryAllocationServices/BlackBoxTest/MemoryAllocationServicesBBTestConformance.c
+++ b/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/MemoryAllocationServices/BlackBoxTest/MemoryAllocationServicesBBTestConformance.c
@@ -24,7 +24,7 @@ Abstract:
 
 --*/
 
-#include "SctLib.h"
+#include "SctLib.h"
 #include "MemoryAllocationServicesBBTestMain.h"
 
 /**
@@ -288,7 +288,7 @@ BBTestGetMemoryMapConsistencyTest (
                  L"%a:%d:Status - %r",
                  __FILE__,
                  (UINTN)__LINE__,
-                 Status
+                 Status2
                  ); 
 
   FreeMemoryMap ();
@@ -1079,81 +1079,3 @@ BBTestAllocatePoolConsistencyTest (
   FreeMemoryMap ();
   return EFI_SUCCESS;
 }
-
-/**
- *  Entrypoint for gtBS->FreePool () Consistency Test.
- *  @param This a pointer of EFI_BB_TEST_PROTOCOL.
- *  @param ClientInterface a pointer to the interface to be tested.
- *  @param TestLevel test "thoroughness" control.
- *  @param SupportHandle a handle containing protocols required.
- *  @return EFI_SUCCESS Finish the test successfully.
- */
-//
-// TDS 3.5
-//
-EFI_STATUS
-BBTestFreePoolConsistencyTest (
-  IN EFI_BB_TEST_PROTOCOL       *This,
-  IN VOID                       *ClientInterface,
-  IN EFI_TEST_LEVEL             TestLevel,
-  IN EFI_HANDLE                 SupportHandle
-  )
-{
-  EFI_STANDARD_TEST_LIBRARY_PROTOCOL   *StandardLib;
-  EFI_STATUS                           Status;
-  //VOID                                 *Memory;
-  EFI_TEST_ASSERTION                   AssertionType;
-
-  //
-  // Get the Standard Library Interface
-  //
-  Status = gtBS->HandleProtocol (
-                   SupportHandle,
-                   &gEfiStandardTestLibraryGuid,
-                   (VOID **) &StandardLib
-                   );
-
-  if (EFI_ERROR(Status)) {
-    return Status;
-  }
-
-  Status = InitMemoryMap ();
-  if (EFI_ERROR(Status)) {
-    StandardLib->RecordAssertion (
-                   StandardLib,
-                   EFI_TEST_ASSERTION_FAILED,
-                   gTestGenericFailureGuid,
-                   L"InitMemoryMap - Allocate memory map buffer",
-                   L"%a:%d:Status - %r",
-                   __FILE__,
-                   (UINTN)__LINE__,
-                   Status
-                   );
-    return Status;
-  }
-
-  //
-  // 3.5.2.1  FreePool should not succeed when the Buffer is NULL
-  //
-  Status = gtBS->FreePool (
-                   NULL // invalid
-                   );
-  if (Status == EFI_INVALID_PARAMETER) {
-    AssertionType = EFI_TEST_ASSERTION_PASSED;
-  } else {
-    AssertionType = EFI_TEST_ASSERTION_FAILED;
-  }
-  StandardLib->RecordAssertion (
-                 StandardLib,
-                 AssertionType,
-                 gMemoryAllocationServicesConsistencyTestAssertionGuid042,
-                 L"BS.FreePool - Buffer is NULL",
-                 L"%a:%d:Status - %r",
-                 __FILE__,
-                 (UINTN)__LINE__,
-                 Status
-                 );
-
-  FreeMemoryMap ();
-  return EFI_SUCCESS;
-}
\ No newline at end of file
diff --git a/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/MemoryAllocationServices/BlackBoxTest/MemoryAllocationServicesBBTestFunction.c b/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/MemoryAllocationServices/BlackBoxTest/MemoryAllocationServicesBBTestFunction.c
index d18fe1fc..b5d92cfd 100644
--- a/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/MemoryAllocationServices/BlackBoxTest/MemoryAllocationServicesBBTestFunction.c
+++ b/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/MemoryAllocationServices/BlackBoxTest/MemoryAllocationServicesBBTestFunction.c
@@ -24,7 +24,7 @@ Abstract:
 
 --*/
 
-#include "SctLib.h"
+#include "SctLib.h"
 #include "MemoryAllocationServicesBBTestMain.h"
 
 #define ALLOCATEPAGES_MEMORYTYPE_NUM 16
@@ -706,7 +706,7 @@ BBTestAllocatePagesInterfaceTest (
         if (PageNum <= 0x10) {
           break;
         }
-        Start   = (Start + 0x10000) & 0xFFFFFFFFFFFF0000;
+        Start   = (Start + 0xFFFF) & 0xFFFFFFFFFFFF0000;
         PageNum = PageNum - EFI_SIZE_TO_PAGES(0x10000);
 
         Memory  = Start;
@@ -836,7 +836,7 @@ BBTestAllocatePagesInterfaceTest (
         if (PageNum <= 0x10) {
           break;
         }
-        Start   = (Start + 0x10000) & 0xFFFFFFFFFFFF0000;
+        Start   = (Start + 0xFFFF) & 0xFFFFFFFFFFFF0000;
         PageNum = PageNum - EFI_SIZE_TO_PAGES(0x10000);
 
         Memory  = Start;
@@ -959,7 +959,7 @@ BBTestAllocatePagesInterfaceTest (
         if (PageNum <= 0x10) {
           break;
         }
-        Start   = (Start + 0x10000) & 0xFFFFFFFFFFFF0000;
+        Start   = (Start + 0xFFFF) & 0xFFFFFFFFFFFF0000;
         PageNum = PageNum - EFI_SIZE_TO_PAGES(0x10000);
 
         Memory = Start + (SctLShiftU64 (PageNum/3, EFI_PAGE_SHIFT) & 0xFFFFFFFFFFFF0000);
@@ -1082,7 +1082,7 @@ BBTestAllocatePagesInterfaceTest (
         if (PageNum <= 0x10) {
           break;
         }
-        Start   = (Start + 0x10000) & 0xFFFFFFFFFFFF0000;
+        Start   = (Start + 0xFFFF) & 0xFFFFFFFFFFFF0000;
         PageNum = PageNum - EFI_SIZE_TO_PAGES(0x10000);
 
         Memory  = Start + (SctLShiftU64 (PageNum * 2 / 3, EFI_PAGE_SHIFT) & 0xFFFFFFFFFFFF0000);
@@ -1212,7 +1212,7 @@ BBTestAllocatePagesInterfaceTest (
         if (PageNum <= 0x10) {
           break;
         }
-        Start   = (Start + 0x10000) & 0xFFFFFFFFFFFF0000;
+        Start   = (Start + 0xFFFF) & 0xFFFFFFFFFFFF0000;
         PageNum = PageNum - EFI_SIZE_TO_PAGES(0x10000);
 
         Memory  = Start;
@@ -1335,7 +1335,7 @@ BBTestAllocatePagesInterfaceTest (
         if (PageNum <= 0x10) {
           break;
         }
-        Start   = (Start + 0x10000) & 0xFFFFFFFFFFFF0000;
+        Start   = (Start + 0xFFFF) & 0xFFFFFFFFFFFF0000;
         PageNum = PageNum - EFI_SIZE_TO_PAGES(0x10000);
 
         Memory  = Start;
@@ -1474,7 +1474,7 @@ BBTestAllocatePagesInterfaceTest (
         if (PageNum <= 0x10) {
           break;
         }
-        Start   = (Start + 0x10000) & 0xFFFFFFFFFFFF0000;
+        Start   = (Start + 0xFFFF) & 0xFFFFFFFFFFFF0000;
         PageNum = PageNum - EFI_SIZE_TO_PAGES(0x10000);
 
         Memory  = Start;
@@ -1810,117 +1810,3 @@ BBTestAllocatePoolInterfaceTest (
   FreeMemoryMap ();
   return EFI_SUCCESS;
 }
-
-/**
- *  Entrypoint for gtBS->FreePool () Interface Test.
- *  @param This a pointer of EFI_BB_TEST_PROTOCOL.
- *  @param ClientInterface a pointer to the interface to be tested.
- *  @param TestLevel test "thoroughness" control.
- *  @param SupportHandle a handle containing protocols required.
- *  @return EFI_SUCCESS Finish the test successfully.
- */
-//
-// TDS 4.5
-//
-EFI_STATUS
-BBTestFreePoolInterfaceTest (
-  IN EFI_BB_TEST_PROTOCOL       *This,
-  IN VOID                       *ClientInterface,
-  IN EFI_TEST_LEVEL             TestLevel,
-  IN EFI_HANDLE                 SupportHandle
-  )
-{
-  EFI_STANDARD_TEST_LIBRARY_PROTOCOL   *StandardLib;
-  EFI_STATUS                           Status;
-  VOID                                 *Memory;
-  EFI_TEST_ASSERTION                   AssertionType;
-  UINTN                                Index;
-  UINTN                                TypeIndex;
-  EFI_TPL                              OldTpl;
-
-  //
-  // Get the Standard Library Interface
-  //
-  Status = gtBS->HandleProtocol (
-                   SupportHandle,
-                   &gEfiStandardTestLibraryGuid,
-                   (VOID **) &StandardLib
-                   );
-
-  if (EFI_ERROR(Status)) {
-    return Status;
-  }
-
-  Status = InitMemoryMap ();
-  if (EFI_ERROR(Status)) {
-    StandardLib->RecordAssertion (
-                   StandardLib,
-                   EFI_TEST_ASSERTION_FAILED,
-                   gTestGenericFailureGuid,
-                   L"InitMemoryMap - Allocate memory map buffer",
-                   L"%a:%d:Status - %r",
-                   __FILE__,
-                   (UINTN)__LINE__,
-                   Status
-                   );
-    return Status;
-  }
-
-  for (Index = 0; Index < TPL_ARRAY_SIZE; Index++) {
-    //
-    // 4.5.2.1  FreePool must succeed with valid parameters.
-    //
-    for (TypeIndex = 0; TypeIndex < ALLOCATEPOOL_MEMORYTYPE_NUM; TypeIndex++) {
-      Status = gtBS->AllocatePool (
-                       AllocatePoolMemoryType[TypeIndex],
-                       1,
-                       (VOID **)&Memory
-                       );
-      if (EFI_ERROR(Status)) {
-        StandardLib->RecordAssertion (
-                       StandardLib,
-                       EFI_TEST_ASSERTION_FAILED,
-                       gTestGenericFailureGuid,
-                       L"BS.AllocatePool - 1 byte",
-                       L"%a:%d:Status - %r, TPL - %d, MemType - %d",
-                       __FILE__,
-                       (UINTN)__LINE__,
-                       Status,
-                       TplArray[Index],
-                       AllocatePoolMemoryType[TypeIndex]
-                       );
-        continue;
-      }
-      OldTpl = gtBS->RaiseTPL (TplArray[Index]);
-      Status = gtBS->FreePool (
-                       Memory
-                       );
-      gtBS->RestoreTPL (OldTpl);
-      if (!EFI_ERROR(Status)) {
-        AssertionType = EFI_TEST_ASSERTION_PASSED;
-      } else {
-        AssertionType = EFI_TEST_ASSERTION_FAILED;
-      }
-      StandardLib->RecordAssertion (
-                     StandardLib,
-                     AssertionType,
-                     Index==0? \
-                     gMemoryAllocationServicesInterfaceTestAssertionGuid038: \
-                     (Index == 1? \
-                      gMemoryAllocationServicesBBTestFunctionAssertionGuid075: \
-                      gMemoryAllocationServicesBBTestFunctionAssertionGuid076),
-                     L"BS.FreePool - 1 byte",
-                     L"%a:%d:Status - %r, TPL - %d, MemType - %d",
-                     __FILE__,
-                     (UINTN)__LINE__,
-                     Status,
-                     TplArray[Index],
-                     AllocatePoolMemoryType[TypeIndex]
-                     );
-    }
-
-  }
-
-  FreeMemoryMap ();
-  return EFI_SUCCESS;
-}
\ No newline at end of file
diff --git a/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/MemoryAllocationServices/BlackBoxTest/MemoryAllocationServicesBBTestMain.c b/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/MemoryAllocationServices/BlackBoxTest/MemoryAllocationServicesBBTestMain.c
index 8aa89a93..1c902d82 100644
--- a/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/MemoryAllocationServices/BlackBoxTest/MemoryAllocationServicesBBTestMain.c
+++ b/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/MemoryAllocationServices/BlackBoxTest/MemoryAllocationServicesBBTestMain.c
@@ -85,15 +85,6 @@ EFI_BB_TEST_ENTRY_FIELD gBBTestEntryField[] = {
     EFI_TEST_CASE_AUTO,
     BBTestAllocatePoolConsistencyTest
   },
-  {
-    MEMORY_ALLOCATION_SERVICES_FREEPOOL_CONSISTENCY_GUID,
-    L"FreePool_Conf",
-    L"Consistency Test for FreePool",
-    EFI_TEST_LEVEL_MINIMAL,
-    gSupportProtocolGuid1,
-    EFI_TEST_CASE_AUTO,
-    BBTestFreePoolConsistencyTest
-  },
   {
     MEMORY_ALLOCATION_SERVICES_GETMEMORYMAP_INTERFACE_GUID,
     L"GetMemoryMap_Func",
@@ -130,16 +121,6 @@ EFI_BB_TEST_ENTRY_FIELD gBBTestEntryField[] = {
     EFI_TEST_CASE_AUTO,
     BBTestAllocatePoolInterfaceTest
   },
-  {
-    MEMORY_ALLOCATION_SERVICES_FREEPOOL_INTERFACE_GUID,
-    L"FreePool_Func",
-    L"Interface Test for FreePool",
-    EFI_TEST_LEVEL_DEFAULT,
-    gSupportProtocolGuid1,
-    EFI_TEST_CASE_AUTO,
-    BBTestFreePoolInterfaceTest
-  },
-
 #ifdef EFI_TEST_EXHAUSTIVE
   {
     MEMORY_ALLOCATION_SERVICES_GETMEMORYMAP_STRESS_TEST_GUID,
diff --git a/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ProtocolHandlerServices/BlackBoxTest/ProtocolHandlerBBTestFunction_2.c b/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ProtocolHandlerServices/BlackBoxTest/ProtocolHandlerBBTestFunction_2.c
index c143e558..d8962262 100644
--- a/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ProtocolHandlerServices/BlackBoxTest/ProtocolHandlerBBTestFunction_2.c
+++ b/uefi-sct/SctPkg/TestCase/UEFI/EFI/BootServices/ProtocolHandlerServices/BlackBoxTest/ProtocolHandlerBBTestFunction_2.c
@@ -24,7 +24,7 @@ Abstract:
 
 --*/
 
-#include "SctLib.h"
+#include "SctLib.h"
 #include "Misc.h"
 
 //
@@ -12778,7 +12778,7 @@ BBTestUninstallMultipleProtocolInterfacesInterfaceTestCheckPoint6 (
     //
     // Step 1: check return status
     //
-    if (EFI_ACCESS_DENIED == Status) {
+    if (EFI_INVALID_PARAMETER == Status) {
       AssertionType = EFI_TEST_ASSERTION_PASSED;
     } else {
       AssertionType = EFI_TEST_ASSERTION_FAILED;
@@ -13108,7 +13108,7 @@ BBTestUninstallMultipleProtocolInterfacesInterfaceTestCheckPoint7 (
     //
     // Step 1: check return status
     //
-    if (EFI_ACCESS_DENIED == Status) {
+    if (EFI_INVALID_PARAMETER == Status) {
       AssertionType = EFI_TEST_ASSERTION_PASSED;
     } else {
       AssertionType = EFI_TEST_ASSERTION_FAILED;
@@ -13453,7 +13453,7 @@ BBTestUninstallMultipleProtocolInterfacesInterfaceTestCheckPoint8 (
     //
     // Step 1: check return status
     //
-    if (EFI_ACCESS_DENIED == Status) {
+    if (EFI_INVALID_PARAMETER == Status) {
       AssertionType = EFI_TEST_ASSERTION_PASSED;
     } else {
       AssertionType = EFI_TEST_ASSERTION_FAILED;
@@ -13807,7 +13807,7 @@ BBTestUninstallMultipleProtocolInterfacesInterfaceTestCheckPoint9 (
     //
     // Step 1: check return status
     //
-    if (EFI_ACCESS_DENIED == Status) {
+    if (EFI_INVALID_PARAMETER == Status) {
       AssertionType = EFI_TEST_ASSERTION_PASSED;
     } else {
       AssertionType = EFI_TEST_ASSERTION_FAILED;
diff --git a/uefi-sct/SctPkg/TestCase/UEFI/EFI/Generic/EfiCompliant/BlackBoxTest/Dependency/Config/EfiCompliant.ini b/uefi-sct/SctPkg/TestCase/UEFI/EFI/Generic/EfiCompliant/BlackBoxTest/Dependency/Config/EfiCompliant.ini
index 78b5f7b5..4cd1c675 100644
--- a/uefi-sct/SctPkg/TestCase/UEFI/EFI/Generic/EfiCompliant/BlackBoxTest/Dependency/Config/EfiCompliant.ini
+++ b/uefi-sct/SctPkg/TestCase/UEFI/EFI/Generic/EfiCompliant/BlackBoxTest/Dependency/Config/EfiCompliant.ini
@@ -93,33 +93,33 @@
 [Platform Specific]
 ConsoleDevices            = yes
 HiiConfigSupport          = yes
-HiiFontSupport            = yes
-GraphicalConsoleDevices   = yes
-PointerDevices            = yes
-BootFromDiskDevices       = yes
-BootFromNetworkDevices    = yes
-ValidateBootImageThruNet  = yes
-UartDevices               = yes
-PciBusSupport             = yes
-UsbBusSupport             = yes
-NVMExpressPassThru        = yes
-BootFromNVMe              = yes
-ExtScsiPassThru           = yes
-DebugSupport              = yes
-PlatformDriverOverride    = yes
-AtaPassThru               = yes
-UEFIIPv4Support           = yes
-BootFromScsi              = yes
-ExtScsiPassThruSupport    = yes
-BootFromIScsi             = yes
-EBCSupport                = yes
-UEFIIPv6Support           = yes
-VLANSupport               = yes
-DNS4Support               = yes
-DNS6Support               = yes
-TLSSupport                = yes
-HTTPSupport               = yes
-EAPSupport                = yes
-BlueToothSupport          = yes
-IPSecSupport              = yes
+HiiFontSupport            = no
+GraphicalConsoleDevices   = no
+PointerDevices            = no
+BootFromDiskDevices       = no
+BootFromNetworkDevices    = no
+ValidateBootImageThruNet  = no
+UartDevices               = no
+PciBusSupport             = no
+UsbBusSupport             = no
+NVMExpressPassThru        = no
+BootFromNVMe              = no
+ExtScsiPassThru           = no
+DebugSupport              = no
+PlatformDriverOverride    = no
+AtaPassThru               = no
+UEFIIPv4Support           = no
+BootFromScsi              = no
+ExtScsiPassThruSupport    = no
+BootFromIScsi             = no
+EBCSupport                = no
+UEFIIPv6Support           = no
+VLANSupport               = no
+DNS4Support               = no
+DNS6Support               = no
+TLSSupport                = no
+HTTPSupport               = no
+EAPSupport                = no
+BlueToothSupport          = no
+IPSecSupport              = no
 
diff --git a/uefi-sct/SctPkg/TestCase/UEFI/EFI/RuntimeServices/VariableServices/BlackBoxTest/AuthVariableServicesBBTestConformance.c b/uefi-sct/SctPkg/TestCase/UEFI/EFI/RuntimeServices/VariableServices/BlackBoxTest/AuthVariableServicesBBTestConformance.c
index a1d1c4c3..715933a0 100644
--- a/uefi-sct/SctPkg/TestCase/UEFI/EFI/RuntimeServices/VariableServices/BlackBoxTest/AuthVariableServicesBBTestConformance.c
+++ b/uefi-sct/SctPkg/TestCase/UEFI/EFI/RuntimeServices/VariableServices/BlackBoxTest/AuthVariableServicesBBTestConformance.c
@@ -1,315 +1,311 @@
-/** @file
-
-  Copyright 2006 - 2012 Unified EFI, Inc.<BR>
-  Copyright (c) 2010 - 2018, Intel Corporation. All rights reserved.<BR>
-
-  This program and the accompanying materials
-  are licensed and made available under the terms and conditions of the BSD License
-  which accompanies this distribution.  The full text of the license may be found at 
-  http://opensource.org/licenses/bsd-license.php
- 
-  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
-  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
- 
-**/
-/*++
-
-Module Name:
-  AuthVariableServicesBBTestConformance.c
-
-Abstract:
-  Auth Variable Black-Box Conformance Test.
-
---*/
-
+/** @file
+
+  Copyright 2006 - 2012 Unified EFI, Inc.<BR>
+  Copyright (c) 2010 - 2019, Intel Corporation. All rights reserved.<BR>
+
+  This program and the accompanying materials
+  are licensed and made available under the terms and conditions of the BSD License
+  which accompanies this distribution.  The full text of the license may be found at 
+  http://opensource.org/licenses/bsd-license.php
+ 
+  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
+  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
+ 
+**/
+/*++
+
+Module Name:
+  AuthVariableServicesBBTestConformance.c
+
+Abstract:
+  Auth Variable Black-Box Conformance Test.
+
+--*/
+
 #include "SctLib.h"
-#include "VariableServicesBBTestMain.h"
-#include "AuthVariableServicesBBTest.h"
-
-STATIC UINT8 mInvalidAuthVarDERCreate[] = {
-0xdc, 0x07, 0x07, 0x02, 0x10, 0x38, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-0x0f, 0x03, 0x00, 0x00, 0x00, 0x02, 0xf1, 0x0e, 0x9d, 0xd2, 0xaf, 0x4a, 0xdf, 0x68, 0xee, 0x49,
-0x8a, 0xa9, 0x34, 0x7d, 0x37, 0x56, 0x65, 0xa7, 0x30, 0x82, 0x02, 0xf3, 0x02, 0x01, 0x01, 0x31,
-0x0f, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05, 0x00,
-0x30, 0x0b, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x07, 0x01, 0xa0, 0x82, 0x01,
-0xfa, 0x30, 0x82, 0x01, 0xf6, 0x30, 0x82, 0x01, 0x5f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x10,
-0x68, 0x99, 0x65, 0xc8, 0xe3, 0xb6, 0xbd, 0x81, 0x45, 0x85, 0x00, 0x61, 0x17, 0x34, 0x2e, 0xde,
-0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x04, 0x05, 0x00, 0x30,
-0x14, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x09, 0x54, 0x65, 0x73, 0x74,
-0x52, 0x6f, 0x6f, 0x74, 0x31, 0x30, 0x1e, 0x17, 0x0d, 0x31, 0x32, 0x30, 0x37, 0x30, 0x32, 0x30,
-0x37, 0x33, 0x32, 0x32, 0x37, 0x5a, 0x17, 0x0d, 0x33, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33,
-0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x14, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x03,
-0x13, 0x09, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x30, 0x81, 0x9f, 0x30, 0x0d,
-0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x81, 0x8d,
-0x00, 0x30, 0x81, 0x89, 0x02, 0x81, 0x81, 0x00, 0xb5, 0x5b, 0x04, 0xe6, 0x76, 0x84, 0x46, 0xc4,
-0x81, 0x1f, 0x97, 0x1c, 0x10, 0x0c, 0x3e, 0x7f, 0xf8, 0x56, 0xe7, 0x7a, 0x6d, 0xac, 0x37, 0x8c,
-0x24, 0x98, 0x8f, 0xf0, 0xfd, 0xdf, 0x44, 0x90, 0x8c, 0xe0, 0x29, 0x84, 0x23, 0xf6, 0x00, 0x9e,
-0x39, 0x0d, 0x2e, 0x81, 0x86, 0xff, 0x52, 0x11, 0xdb, 0x75, 0x3f, 0x12, 0xc5, 0x5e, 0xb2, 0x8e,
-0x12, 0x12, 0x1a, 0x80, 0x37, 0xbd, 0x31, 0xe0, 0x87, 0x5c, 0x13, 0x48, 0x3a, 0xf2, 0x55, 0x37,
-0x3b, 0x72, 0x8b, 0xc0, 0x78, 0xa4, 0x60, 0x2f, 0xaf, 0xf2, 0x0e, 0xc9, 0x03, 0xd6, 0x90, 0x01,
-0x81, 0xf1, 0xda, 0xc3, 0x6e, 0x88, 0xbe, 0x12, 0x21, 0x0c, 0x6f, 0x62, 0x75, 0x43, 0xa8, 0xc6,
-0xd1, 0x40, 0x62, 0x96, 0xf8, 0x1e, 0xa3, 0x5d, 0x9f, 0xf7, 0xdb, 0x8e, 0xba, 0x78, 0x4d, 0xef,
-0x58, 0x5c, 0x93, 0x2d, 0x15, 0x25, 0x39, 0x1d, 0x02, 0x03, 0x01, 0x00, 0x01, 0xa3, 0x49, 0x30,
-0x47, 0x30, 0x45, 0x06, 0x03, 0x55, 0x1d, 0x01, 0x04, 0x3e, 0x30, 0x3c, 0x80, 0x10, 0xec, 0xd2,
-0x82, 0xce, 0x3b, 0x12, 0xd2, 0xef, 0x3f, 0xc8, 0x8d, 0x9c, 0xb9, 0x07, 0x7d, 0x56, 0xa1, 0x16,
-0x30, 0x14, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x09, 0x54, 0x65, 0x73,
-0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x82, 0x10, 0x68, 0x99, 0x65, 0xc8, 0xe3, 0xb6, 0xbd, 0x81,
-0x45, 0x85, 0x00, 0x61, 0x17, 0x34, 0x2e, 0xde, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86,
-0xf7, 0x0d, 0x01, 0x01, 0x04, 0x05, 0x00, 0x03, 0x81, 0x81, 0x00, 0x48, 0x97, 0xd6, 0xad, 0x9d,
-0xa3, 0x9c, 0x45, 0xfc, 0xd6, 0x82, 0x51, 0x06, 0x94, 0xfc, 0x3f, 0xed, 0x8d, 0xab, 0xcd, 0x87,
-0x9c, 0x80, 0x22, 0x30, 0x14, 0x27, 0xc7, 0x89, 0x04, 0x08, 0x2c, 0x51, 0x68, 0x6a, 0xf5, 0x19,
-0x6a, 0x57, 0x77, 0x4e, 0xc6, 0x55, 0xbf, 0xaa, 0x05, 0x42, 0xaa, 0xbf, 0xf8, 0x4d, 0xc5, 0x03,
-0x97, 0x65, 0x67, 0xca, 0x52, 0xd3, 0xa7, 0x61, 0xb1, 0x01, 0xac, 0xdd, 0x4e, 0xc1, 0x96, 0x70,
-0xe4, 0xf5, 0xe0, 0x99, 0x28, 0xf5, 0xa0, 0xcf, 0xb2, 0x9e, 0x23, 0x00, 0xf0, 0xd2, 0x18, 0x73,
-0x30, 0xbb, 0xe4, 0x33, 0xdb, 0x3e, 0xd3, 0x4e, 0x4e, 0x56, 0x12, 0x36, 0x21, 0x28, 0x5d, 0x3b,
-0x43, 0xe1, 0xf3, 0x9a, 0xd1, 0x2d, 0xad, 0x31, 0xfb, 0x40, 0x9b, 0x57, 0xb2, 0xb5, 0x9f, 0x6e,
-0x8e, 0x39, 0xff, 0x57, 0x20, 0xd2, 0x44, 0xb8, 0xa3, 0x49, 0xfb, 0x31, 0x81, 0xd1, 0x30, 0x81,
-0xce, 0x02, 0x01, 0x01, 0x30, 0x28, 0x30, 0x14, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04,
-0x03, 0x13, 0x09, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x02, 0x10, 0x68, 0x99,
-0x65, 0xc8, 0xe3, 0xb6, 0xbd, 0x81, 0x45, 0x85, 0x00, 0x61, 0x17, 0x34, 0x2e, 0xde, 0x30, 0x0d,
-0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05, 0x00, 0x30, 0x0d, 0x06,
-0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x04, 0x81, 0x80, 0xa2,
-0x86, 0x53, 0xe2, 0xf2, 0x84, 0xd3, 0xe1, 0x75, 0x5d, 0xa4, 0x45, 0xf7, 0xd7, 0x9e, 0x78, 0x23,
-0x14, 0x62, 0x4f, 0x4e, 0xf9, 0x02, 0xf0, 0x8c, 0xfb, 0x9b, 0x44, 0x9e, 0x13, 0x1c, 0x7d, 0x09,
-0x13, 0x33, 0xc4, 0x18, 0x65, 0x1a, 0x7e, 0xc1, 0x8b, 0xdf, 0x61, 0x8c, 0xda, 0x74, 0x66, 0x81,
-0x40, 0xd0, 0x3f, 0x76, 0x41, 0x28, 0x75, 0xdd, 0x0e, 0xaa, 0x10, 0xee, 0x2c, 0x41, 0x4b, 0x70,
-0x51, 0xb5, 0xab, 0x06, 0x35, 0x26, 0x80, 0xcf, 0x73, 0xc8, 0x07, 0x4a, 0x31, 0xe6, 0x2b, 0xb6,
-0xba, 0xe2, 0x19, 0x0f, 0x46, 0xd7, 0x5c, 0xb9, 0xc7, 0xea, 0x2b, 0xc9, 0x05, 0x0b, 0x35, 0xf1,
-0x27, 0x5d, 0xd1, 0xaf, 0x27, 0x33, 0x08, 0xfa, 0xee, 0x4e, 0x7b, 0x64, 0x01, 0x8e, 0x82, 0xb5,
-0x68, 0xb3, 0xd7, 0x1a, 0x54, 0x89, 0x68, 0xb9, 0x7c, 0x85, 0x9e, 0x58, 0xc4, 0xf4, 0x98, 0x30,
-0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x38 //change the last 0x39 to 0x38
-};
-
-STATIC UINT8 mValidAuthVarDERCreate[] = {
-0xdc, 0x07, 0x07, 0x04, 0x09, 0x2e, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
-0x0f, 0x03, 0x00, 0x00, 0x00, 0x02, 0xf1, 0x0e, 0x9d, 0xd2, 0xaf, 0x4a, 0xdf, 0x68, 0xee, 0x49,  
-0x8a, 0xa9, 0x34, 0x7d, 0x37, 0x56, 0x65, 0xa7, 0x30, 0x82, 0x02, 0xf3, 0x02, 0x01, 0x01, 0x31,  
-0x0f, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05, 0x00,  
-0x30, 0x0b, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x07, 0x01, 0xa0, 0x82, 0x01,  
-0xfa, 0x30, 0x82, 0x01, 0xf6, 0x30, 0x82, 0x01, 0x5f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x10,  
-0x68, 0x99, 0x65, 0xc8, 0xe3, 0xb6, 0xbd, 0x81, 0x45, 0x85, 0x00, 0x61, 0x17, 0x34, 0x2e, 0xde,  
-0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x04, 0x05, 0x00, 0x30,  
-0x14, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x09, 0x54, 0x65, 0x73, 0x74,  
-0x52, 0x6f, 0x6f, 0x74, 0x31, 0x30, 0x1e, 0x17, 0x0d, 0x31, 0x32, 0x30, 0x37, 0x30, 0x32, 0x30,  
-0x37, 0x33, 0x32, 0x32, 0x37, 0x5a, 0x17, 0x0d, 0x33, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33,  
-0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x14, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x03,  
-0x13, 0x09, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x30, 0x81, 0x9f, 0x30, 0x0d,  
-0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x81, 0x8d,  
-0x00, 0x30, 0x81, 0x89, 0x02, 0x81, 0x81, 0x00, 0xb5, 0x5b, 0x04, 0xe6, 0x76, 0x84, 0x46, 0xc4,  
-0x81, 0x1f, 0x97, 0x1c, 0x10, 0x0c, 0x3e, 0x7f, 0xf8, 0x56, 0xe7, 0x7a, 0x6d, 0xac, 0x37, 0x8c,  
-0x24, 0x98, 0x8f, 0xf0, 0xfd, 0xdf, 0x44, 0x90, 0x8c, 0xe0, 0x29, 0x84, 0x23, 0xf6, 0x00, 0x9e,  
-0x39, 0x0d, 0x2e, 0x81, 0x86, 0xff, 0x52, 0x11, 0xdb, 0x75, 0x3f, 0x12, 0xc5, 0x5e, 0xb2, 0x8e,  
-0x12, 0x12, 0x1a, 0x80, 0x37, 0xbd, 0x31, 0xe0, 0x87, 0x5c, 0x13, 0x48, 0x3a, 0xf2, 0x55, 0x37,  
-0x3b, 0x72, 0x8b, 0xc0, 0x78, 0xa4, 0x60, 0x2f, 0xaf, 0xf2, 0x0e, 0xc9, 0x03, 0xd6, 0x90, 0x01,  
-0x81, 0xf1, 0xda, 0xc3, 0x6e, 0x88, 0xbe, 0x12, 0x21, 0x0c, 0x6f, 0x62, 0x75, 0x43, 0xa8, 0xc6,  
-0xd1, 0x40, 0x62, 0x96, 0xf8, 0x1e, 0xa3, 0x5d, 0x9f, 0xf7, 0xdb, 0x8e, 0xba, 0x78, 0x4d, 0xef,  
-0x58, 0x5c, 0x93, 0x2d, 0x15, 0x25, 0x39, 0x1d, 0x02, 0x03, 0x01, 0x00, 0x01, 0xa3, 0x49, 0x30,  
-0x47, 0x30, 0x45, 0x06, 0x03, 0x55, 0x1d, 0x01, 0x04, 0x3e, 0x30, 0x3c, 0x80, 0x10, 0xec, 0xd2,  
-0x82, 0xce, 0x3b, 0x12, 0xd2, 0xef, 0x3f, 0xc8, 0x8d, 0x9c, 0xb9, 0x07, 0x7d, 0x56, 0xa1, 0x16,  
-0x30, 0x14, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x09, 0x54, 0x65, 0x73,  
-0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x82, 0x10, 0x68, 0x99, 0x65, 0xc8, 0xe3, 0xb6, 0xbd, 0x81,  
-0x45, 0x85, 0x00, 0x61, 0x17, 0x34, 0x2e, 0xde, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86,  
-0xf7, 0x0d, 0x01, 0x01, 0x04, 0x05, 0x00, 0x03, 0x81, 0x81, 0x00, 0x48, 0x97, 0xd6, 0xad, 0x9d,  
-0xa3, 0x9c, 0x45, 0xfc, 0xd6, 0x82, 0x51, 0x06, 0x94, 0xfc, 0x3f, 0xed, 0x8d, 0xab, 0xcd, 0x87,  
-0x9c, 0x80, 0x22, 0x30, 0x14, 0x27, 0xc7, 0x89, 0x04, 0x08, 0x2c, 0x51, 0x68, 0x6a, 0xf5, 0x19,  
-0x6a, 0x57, 0x77, 0x4e, 0xc6, 0x55, 0xbf, 0xaa, 0x05, 0x42, 0xaa, 0xbf, 0xf8, 0x4d, 0xc5, 0x03,  
-0x97, 0x65, 0x67, 0xca, 0x52, 0xd3, 0xa7, 0x61, 0xb1, 0x01, 0xac, 0xdd, 0x4e, 0xc1, 0x96, 0x70,  
-0xe4, 0xf5, 0xe0, 0x99, 0x28, 0xf5, 0xa0, 0xcf, 0xb2, 0x9e, 0x23, 0x00, 0xf0, 0xd2, 0x18, 0x73,  
-0x30, 0xbb, 0xe4, 0x33, 0xdb, 0x3e, 0xd3, 0x4e, 0x4e, 0x56, 0x12, 0x36, 0x21, 0x28, 0x5d, 0x3b,  
-0x43, 0xe1, 0xf3, 0x9a, 0xd1, 0x2d, 0xad, 0x31, 0xfb, 0x40, 0x9b, 0x57, 0xb2, 0xb5, 0x9f, 0x6e,  
-0x8e, 0x39, 0xff, 0x57, 0x20, 0xd2, 0x44, 0xb8, 0xa3, 0x49, 0xfb, 0x31, 0x81, 0xd1, 0x30, 0x81,  
-0xce, 0x02, 0x01, 0x01, 0x30, 0x28, 0x30, 0x14, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04,  
-0x03, 0x13, 0x09, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x02, 0x10, 0x68, 0x99,  
-0x65, 0xc8, 0xe3, 0xb6, 0xbd, 0x81, 0x45, 0x85, 0x00, 0x61, 0x17, 0x34, 0x2e, 0xde, 0x30, 0x0d,  
-0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05, 0x00, 0x30, 0x0d, 0x06,  
-0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x04, 0x81, 0x80, 0x92,  
-0xe1, 0x78, 0xb6, 0x81, 0x2d, 0xfd, 0x8f, 0xb1, 0x44, 0xfb, 0xdc, 0xc1, 0xf5, 0x0e, 0x11, 0xde,  
-0xfd, 0x38, 0xcd, 0x83, 0x59, 0xf2, 0xb9, 0x50, 0xe4, 0xb6, 0x98, 0x0f, 0x75, 0xbc, 0x60, 0xe2,  
-0x1c, 0xa0, 0x0f, 0x01, 0xb0, 0xcc, 0xe6, 0x75, 0x3b, 0xba, 0xe2, 0x4f, 0x8e, 0x58, 0xe0, 0x93,  
-0x3a, 0xa7, 0xf2, 0xe1, 0x77, 0x5c, 0xf6, 0xc0, 0xd0, 0x31, 0x68, 0x77, 0x2b, 0x36, 0xa7, 0x91,  
-0x31, 0xf6, 0x1a, 0x7a, 0x3c, 0x85, 0x07, 0xcc, 0x8d, 0x12, 0x2a, 0x0c, 0xa6, 0xd9, 0x68, 0x83,  
-0x32, 0x8b, 0x66, 0x7d, 0x7d, 0xda, 0x11, 0x2a, 0x20, 0x14, 0xd6, 0x75, 0x89, 0xc2, 0x02, 0x31,  
-0xf5, 0x5a, 0x51, 0x59, 0x94, 0xbe, 0x46, 0x52, 0xe1, 0x6c, 0x43, 0x5f, 0x5c, 0x5d, 0x3b, 0xe4,  
-0xce, 0xa5, 0x8f, 0x51, 0xcf, 0xb1, 0x94, 0x82, 0xe8, 0x6a, 0x86, 0x3b, 0xba, 0xd1, 0xec, 0x30,  
-0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39
-};
-
-STATIC EFI_GUID mVarVendorGuid = {0x15EDF297, 0xE832, 0x4d30, {0x82, 0x00, 0xA5, 0x25, 0xA9, 0x31, 0xE3, 0x3E}};
-
-EFI_STATUS
-AuthVariableDERConfTest (
-  IN EFI_BB_TEST_PROTOCOL       *This,
-  IN VOID                       *ClientInterface,
-  IN EFI_TEST_LEVEL             TestLevel,
-  IN EFI_HANDLE                 SupportHandle
-  )
-{
-  EFI_STATUS                          Status;
-  EFI_RUNTIME_SERVICES                *RT;
-  EFI_STANDARD_TEST_LIBRARY_PROTOCOL  *StandardLib;
-  EFI_TEST_RECOVERY_LIBRARY_PROTOCOL  *RecoveryLib;
-  EFI_TEST_LOGGING_LIBRARY_PROTOCOL   *LoggingLib;
-  UINT32                              Attr;
-  EFI_TEST_ASSERTION                  Result;
-  UINTN                               Index;
-  UINTN                               MaximumVariableStorageSize;
-  UINTN                               RemainingVariableStorageSize;
-  UINTN                               MaximumVariableSize;
-  UINT32                              AttrArray[] = {
-    //
-    //  For 1 attribute.
-    //
-    EFI_VARIABLE_NON_VOLATILE,
-    EFI_VARIABLE_RUNTIME_ACCESS,
-    EFI_VARIABLE_BOOTSERVICE_ACCESS,
-    EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS,
-
-    //
-    //  For 2 attributes.
-    //
-    EFI_VARIABLE_NON_VOLATILE | EFI_VARIABLE_RUNTIME_ACCESS,
-    EFI_VARIABLE_NON_VOLATILE | EFI_VARIABLE_BOOTSERVICE_ACCESS,
-    EFI_VARIABLE_NON_VOLATILE | EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS,
-
-    EFI_VARIABLE_RUNTIME_ACCESS | EFI_VARIABLE_BOOTSERVICE_ACCESS,
-    EFI_VARIABLE_RUNTIME_ACCESS | EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS,
-
-    EFI_VARIABLE_BOOTSERVICE_ACCESS | EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS,
-
-    //
-    //  For 3 attributes.
-    //
-    EFI_VARIABLE_NON_VOLATILE | EFI_VARIABLE_RUNTIME_ACCESS | EFI_VARIABLE_BOOTSERVICE_ACCESS,
-    EFI_VARIABLE_NON_VOLATILE | EFI_VARIABLE_RUNTIME_ACCESS | EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS,
-    EFI_VARIABLE_NON_VOLATILE | EFI_VARIABLE_BOOTSERVICE_ACCESS | EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS,
-    EFI_VARIABLE_RUNTIME_ACCESS | EFI_VARIABLE_BOOTSERVICE_ACCESS | EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS,
-
-    //
-    //  For 4 attributes.
-    //
-    EFI_VARIABLE_NON_VOLATILE | EFI_VARIABLE_RUNTIME_ACCESS | EFI_VARIABLE_BOOTSERVICE_ACCESS | EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS,
-  };
-
-  Status = GetTestSupportLibrary (
-             SupportHandle,
-             &StandardLib,
-             &RecoveryLib,
-             &LoggingLib
-             );
-  if (EFI_ERROR(Status)) {
-    return Status;
-  }
-
-  RT = (EFI_RUNTIME_SERVICES *)ClientInterface;
-
-  Attr = EFI_VARIABLE_NON_VOLATILE | 
-         EFI_VARIABLE_RUNTIME_ACCESS | 
-         EFI_VARIABLE_BOOTSERVICE_ACCESS |
-         EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS;
-
-  Status = RT->SetVariable(
-                 L"AuthVarDER", 
-                 &mVarVendorGuid, 
-                 Attr, 
-                 sizeof(mInvalidAuthVarDERCreate), 
-                 (VOID*) mInvalidAuthVarDERCreate
-                 );
-  if (Status == EFI_SECURITY_VIOLATION) {
-    Result = EFI_TEST_ASSERTION_PASSED;
-  } else {
-    Result = EFI_TEST_ASSERTION_FAILED;
-  }
-  StandardLib->RecordAssertion (
-                 StandardLib,
-                 Result,
-                 gVariableServicesBbTestConformanceAssertionGuid019,
-                 L"RT.SetVariable - Set Invalid Time Base Auth Variable",
-                 L"%a:%d:Status - %r",
-                 __FILE__,
-                 (UINTN)__LINE__,
-                 Status
-                 );
-
-  for (Index = 0; Index < sizeof (AttrArray) / sizeof (AttrArray[0]); Index = Index + 1) {
-    Attr = AttrArray[Index];
-    Attr |= EFI_VARIABLE_AUTHENTICATED_WRITE_ACCESS;
-
-    Status = RT->SetVariable (
-                   L"AuthVarDER",
-                   &mVarVendorGuid,
-                   Attr,
-                   sizeof (mValidAuthVarDERCreate),
-                   (VOID *) mValidAuthVarDERCreate
-                   );
-    if (Status == EFI_UNSUPPORTED) {
-      Result = EFI_TEST_ASSERTION_PASSED;
-    } else {
-      Result = EFI_TEST_ASSERTION_FAILED;
-    }
-
-    StandardLib->RecordAssertion (
-                   StandardLib,
-                   Result,
-                   gVariableServicesBbTestConformanceAssertionGuid020,
-                   L"RT.SetVariable - Set Auth Variable with valid cert.",
-                   L"Attributes = Array[%d]. %a:%d:Status - %r",
-                   Index,
-                   __FILE__,
-                   (UINTN)__LINE__,
-                   Status
-                   );
-
-    Status = RT->SetVariable (
-                   L"AuthVarDER",
-                   &mVarVendorGuid,
-                   Attr,
-                   sizeof (mInvalidAuthVarDERCreate),
-                   (VOID *) mInvalidAuthVarDERCreate
-                   );
-    if (Status == EFI_UNSUPPORTED) {
-      Result = EFI_TEST_ASSERTION_PASSED;
-    } else {
-      Result = EFI_TEST_ASSERTION_FAILED;
-    }
-
-    StandardLib->RecordAssertion (
-                   StandardLib,
-                   Result,
-                   gVariableServicesBbTestConformanceAssertionGuid023,
-                   L"RT.SetVariable - Set Auth Variable with invalid cert.",
-                   L"Attributes = Array[%d]. %a:%d:Status - %r",
-                   Index,
-                   __FILE__,
-                   (UINTN)__LINE__,
-                   Status
-                   );
-
-    Status = RT->QueryVariableInfo (
-                   Attr,
-                   &MaximumVariableStorageSize,
-                   &RemainingVariableStorageSize,
-                   &MaximumVariableSize
-                   );
-
-    if (Status == EFI_UNSUPPORTED) {
-      Result = EFI_TEST_ASSERTION_PASSED;
-    } else {
-      Result = EFI_TEST_ASSERTION_FAILED;
-    }
-
-    StandardLib->RecordAssertion (
-                   StandardLib,
-                   Result,
-                   gVariableServicesBbTestConformanceAssertionGuid024,
-                   L"RT.QueryVariableInfo - Query Auth Variable.",
-                   L"Attributes = Array[%d]. %a:%d:Status - %r",
-                   Index,
-                   __FILE__,
-                   (UINTN)__LINE__,
-                   Status
-                   );
-
-  }
-
-  return EFI_SUCCESS;
-}
+#include "VariableServicesBBTestMain.h"
+#include "AuthVariableServicesBBTest.h"
+
+STATIC UINT8 mInvalidAuthVarDERCreate[] = {
+0xdc, 0x07, 0x07, 0x02, 0x10, 0x38, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x0f, 0x03, 0x00, 0x00, 0x00, 0x02, 0xf1, 0x0e, 0x9d, 0xd2, 0xaf, 0x4a, 0xdf, 0x68, 0xee, 0x49,
+0x8a, 0xa9, 0x34, 0x7d, 0x37, 0x56, 0x65, 0xa7, 0x30, 0x82, 0x02, 0xf3, 0x02, 0x01, 0x01, 0x31,
+0x0f, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05, 0x00,
+0x30, 0x0b, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x07, 0x01, 0xa0, 0x82, 0x01,
+0xfa, 0x30, 0x82, 0x01, 0xf6, 0x30, 0x82, 0x01, 0x5f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x10,
+0x68, 0x99, 0x65, 0xc8, 0xe3, 0xb6, 0xbd, 0x81, 0x45, 0x85, 0x00, 0x61, 0x17, 0x34, 0x2e, 0xde,
+0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x04, 0x05, 0x00, 0x30,
+0x14, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x09, 0x54, 0x65, 0x73, 0x74,
+0x52, 0x6f, 0x6f, 0x74, 0x31, 0x30, 0x1e, 0x17, 0x0d, 0x31, 0x32, 0x30, 0x37, 0x30, 0x32, 0x30,
+0x37, 0x33, 0x32, 0x32, 0x37, 0x5a, 0x17, 0x0d, 0x33, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33,
+0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x14, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x03,
+0x13, 0x09, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x30, 0x81, 0x9f, 0x30, 0x0d,
+0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x81, 0x8d,
+0x00, 0x30, 0x81, 0x89, 0x02, 0x81, 0x81, 0x00, 0xb5, 0x5b, 0x04, 0xe6, 0x76, 0x84, 0x46, 0xc4,
+0x81, 0x1f, 0x97, 0x1c, 0x10, 0x0c, 0x3e, 0x7f, 0xf8, 0x56, 0xe7, 0x7a, 0x6d, 0xac, 0x37, 0x8c,
+0x24, 0x98, 0x8f, 0xf0, 0xfd, 0xdf, 0x44, 0x90, 0x8c, 0xe0, 0x29, 0x84, 0x23, 0xf6, 0x00, 0x9e,
+0x39, 0x0d, 0x2e, 0x81, 0x86, 0xff, 0x52, 0x11, 0xdb, 0x75, 0x3f, 0x12, 0xc5, 0x5e, 0xb2, 0x8e,
+0x12, 0x12, 0x1a, 0x80, 0x37, 0xbd, 0x31, 0xe0, 0x87, 0x5c, 0x13, 0x48, 0x3a, 0xf2, 0x55, 0x37,
+0x3b, 0x72, 0x8b, 0xc0, 0x78, 0xa4, 0x60, 0x2f, 0xaf, 0xf2, 0x0e, 0xc9, 0x03, 0xd6, 0x90, 0x01,
+0x81, 0xf1, 0xda, 0xc3, 0x6e, 0x88, 0xbe, 0x12, 0x21, 0x0c, 0x6f, 0x62, 0x75, 0x43, 0xa8, 0xc6,
+0xd1, 0x40, 0x62, 0x96, 0xf8, 0x1e, 0xa3, 0x5d, 0x9f, 0xf7, 0xdb, 0x8e, 0xba, 0x78, 0x4d, 0xef,
+0x58, 0x5c, 0x93, 0x2d, 0x15, 0x25, 0x39, 0x1d, 0x02, 0x03, 0x01, 0x00, 0x01, 0xa3, 0x49, 0x30,
+0x47, 0x30, 0x45, 0x06, 0x03, 0x55, 0x1d, 0x01, 0x04, 0x3e, 0x30, 0x3c, 0x80, 0x10, 0xec, 0xd2,
+0x82, 0xce, 0x3b, 0x12, 0xd2, 0xef, 0x3f, 0xc8, 0x8d, 0x9c, 0xb9, 0x07, 0x7d, 0x56, 0xa1, 0x16,
+0x30, 0x14, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x09, 0x54, 0x65, 0x73,
+0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x82, 0x10, 0x68, 0x99, 0x65, 0xc8, 0xe3, 0xb6, 0xbd, 0x81,
+0x45, 0x85, 0x00, 0x61, 0x17, 0x34, 0x2e, 0xde, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86,
+0xf7, 0x0d, 0x01, 0x01, 0x04, 0x05, 0x00, 0x03, 0x81, 0x81, 0x00, 0x48, 0x97, 0xd6, 0xad, 0x9d,
+0xa3, 0x9c, 0x45, 0xfc, 0xd6, 0x82, 0x51, 0x06, 0x94, 0xfc, 0x3f, 0xed, 0x8d, 0xab, 0xcd, 0x87,
+0x9c, 0x80, 0x22, 0x30, 0x14, 0x27, 0xc7, 0x89, 0x04, 0x08, 0x2c, 0x51, 0x68, 0x6a, 0xf5, 0x19,
+0x6a, 0x57, 0x77, 0x4e, 0xc6, 0x55, 0xbf, 0xaa, 0x05, 0x42, 0xaa, 0xbf, 0xf8, 0x4d, 0xc5, 0x03,
+0x97, 0x65, 0x67, 0xca, 0x52, 0xd3, 0xa7, 0x61, 0xb1, 0x01, 0xac, 0xdd, 0x4e, 0xc1, 0x96, 0x70,
+0xe4, 0xf5, 0xe0, 0x99, 0x28, 0xf5, 0xa0, 0xcf, 0xb2, 0x9e, 0x23, 0x00, 0xf0, 0xd2, 0x18, 0x73,
+0x30, 0xbb, 0xe4, 0x33, 0xdb, 0x3e, 0xd3, 0x4e, 0x4e, 0x56, 0x12, 0x36, 0x21, 0x28, 0x5d, 0x3b,
+0x43, 0xe1, 0xf3, 0x9a, 0xd1, 0x2d, 0xad, 0x31, 0xfb, 0x40, 0x9b, 0x57, 0xb2, 0xb5, 0x9f, 0x6e,
+0x8e, 0x39, 0xff, 0x57, 0x20, 0xd2, 0x44, 0xb8, 0xa3, 0x49, 0xfb, 0x31, 0x81, 0xd1, 0x30, 0x81,
+0xce, 0x02, 0x01, 0x01, 0x30, 0x28, 0x30, 0x14, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04,
+0x03, 0x13, 0x09, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x02, 0x10, 0x68, 0x99,
+0x65, 0xc8, 0xe3, 0xb6, 0xbd, 0x81, 0x45, 0x85, 0x00, 0x61, 0x17, 0x34, 0x2e, 0xde, 0x30, 0x0d,
+0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05, 0x00, 0x30, 0x0d, 0x06,
+0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x04, 0x81, 0x80, 0xa2,
+0x86, 0x53, 0xe2, 0xf2, 0x84, 0xd3, 0xe1, 0x75, 0x5d, 0xa4, 0x45, 0xf7, 0xd7, 0x9e, 0x78, 0x23,
+0x14, 0x62, 0x4f, 0x4e, 0xf9, 0x02, 0xf0, 0x8c, 0xfb, 0x9b, 0x44, 0x9e, 0x13, 0x1c, 0x7d, 0x09,
+0x13, 0x33, 0xc4, 0x18, 0x65, 0x1a, 0x7e, 0xc1, 0x8b, 0xdf, 0x61, 0x8c, 0xda, 0x74, 0x66, 0x81,
+0x40, 0xd0, 0x3f, 0x76, 0x41, 0x28, 0x75, 0xdd, 0x0e, 0xaa, 0x10, 0xee, 0x2c, 0x41, 0x4b, 0x70,
+0x51, 0xb5, 0xab, 0x06, 0x35, 0x26, 0x80, 0xcf, 0x73, 0xc8, 0x07, 0x4a, 0x31, 0xe6, 0x2b, 0xb6,
+0xba, 0xe2, 0x19, 0x0f, 0x46, 0xd7, 0x5c, 0xb9, 0xc7, 0xea, 0x2b, 0xc9, 0x05, 0x0b, 0x35, 0xf1,
+0x27, 0x5d, 0xd1, 0xaf, 0x27, 0x33, 0x08, 0xfa, 0xee, 0x4e, 0x7b, 0x64, 0x01, 0x8e, 0x82, 0xb5,
+0x68, 0xb3, 0xd7, 0x1a, 0x54, 0x89, 0x68, 0xb9, 0x7c, 0x85, 0x9e, 0x58, 0xc4, 0xf4, 0x98, 0x30,
+0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x38 //change the last 0x39 to 0x38
+};
+
+STATIC UINT8 mValidAuthVarDERCreate[] = {
+0xdc, 0x07, 0x07, 0x04, 0x09, 0x2e, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
+0x0f, 0x03, 0x00, 0x00, 0x00, 0x02, 0xf1, 0x0e, 0x9d, 0xd2, 0xaf, 0x4a, 0xdf, 0x68, 0xee, 0x49,  
+0x8a, 0xa9, 0x34, 0x7d, 0x37, 0x56, 0x65, 0xa7, 0x30, 0x82, 0x02, 0xf3, 0x02, 0x01, 0x01, 0x31,  
+0x0f, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05, 0x00,  
+0x30, 0x0b, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x07, 0x01, 0xa0, 0x82, 0x01,  
+0xfa, 0x30, 0x82, 0x01, 0xf6, 0x30, 0x82, 0x01, 0x5f, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x10,  
+0x68, 0x99, 0x65, 0xc8, 0xe3, 0xb6, 0xbd, 0x81, 0x45, 0x85, 0x00, 0x61, 0x17, 0x34, 0x2e, 0xde,  
+0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x04, 0x05, 0x00, 0x30,  
+0x14, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x09, 0x54, 0x65, 0x73, 0x74,  
+0x52, 0x6f, 0x6f, 0x74, 0x31, 0x30, 0x1e, 0x17, 0x0d, 0x31, 0x32, 0x30, 0x37, 0x30, 0x32, 0x30,  
+0x37, 0x33, 0x32, 0x32, 0x37, 0x5a, 0x17, 0x0d, 0x33, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33,  
+0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x14, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x03,  
+0x13, 0x09, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x30, 0x81, 0x9f, 0x30, 0x0d,  
+0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x81, 0x8d,  
+0x00, 0x30, 0x81, 0x89, 0x02, 0x81, 0x81, 0x00, 0xb5, 0x5b, 0x04, 0xe6, 0x76, 0x84, 0x46, 0xc4,  
+0x81, 0x1f, 0x97, 0x1c, 0x10, 0x0c, 0x3e, 0x7f, 0xf8, 0x56, 0xe7, 0x7a, 0x6d, 0xac, 0x37, 0x8c,  
+0x24, 0x98, 0x8f, 0xf0, 0xfd, 0xdf, 0x44, 0x90, 0x8c, 0xe0, 0x29, 0x84, 0x23, 0xf6, 0x00, 0x9e,  
+0x39, 0x0d, 0x2e, 0x81, 0x86, 0xff, 0x52, 0x11, 0xdb, 0x75, 0x3f, 0x12, 0xc5, 0x5e, 0xb2, 0x8e,  
+0x12, 0x12, 0x1a, 0x80, 0x37, 0xbd, 0x31, 0xe0, 0x87, 0x5c, 0x13, 0x48, 0x3a, 0xf2, 0x55, 0x37,  
+0x3b, 0x72, 0x8b, 0xc0, 0x78, 0xa4, 0x60, 0x2f, 0xaf, 0xf2, 0x0e, 0xc9, 0x03, 0xd6, 0x90, 0x01,  
+0x81, 0xf1, 0xda, 0xc3, 0x6e, 0x88, 0xbe, 0x12, 0x21, 0x0c, 0x6f, 0x62, 0x75, 0x43, 0xa8, 0xc6,  
+0xd1, 0x40, 0x62, 0x96, 0xf8, 0x1e, 0xa3, 0x5d, 0x9f, 0xf7, 0xdb, 0x8e, 0xba, 0x78, 0x4d, 0xef,  
+0x58, 0x5c, 0x93, 0x2d, 0x15, 0x25, 0x39, 0x1d, 0x02, 0x03, 0x01, 0x00, 0x01, 0xa3, 0x49, 0x30,  
+0x47, 0x30, 0x45, 0x06, 0x03, 0x55, 0x1d, 0x01, 0x04, 0x3e, 0x30, 0x3c, 0x80, 0x10, 0xec, 0xd2,  
+0x82, 0xce, 0x3b, 0x12, 0xd2, 0xef, 0x3f, 0xc8, 0x8d, 0x9c, 0xb9, 0x07, 0x7d, 0x56, 0xa1, 0x16,  
+0x30, 0x14, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x09, 0x54, 0x65, 0x73,  
+0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x82, 0x10, 0x68, 0x99, 0x65, 0xc8, 0xe3, 0xb6, 0xbd, 0x81,  
+0x45, 0x85, 0x00, 0x61, 0x17, 0x34, 0x2e, 0xde, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86,  
+0xf7, 0x0d, 0x01, 0x01, 0x04, 0x05, 0x00, 0x03, 0x81, 0x81, 0x00, 0x48, 0x97, 0xd6, 0xad, 0x9d,  
+0xa3, 0x9c, 0x45, 0xfc, 0xd6, 0x82, 0x51, 0x06, 0x94, 0xfc, 0x3f, 0xed, 0x8d, 0xab, 0xcd, 0x87,  
+0x9c, 0x80, 0x22, 0x30, 0x14, 0x27, 0xc7, 0x89, 0x04, 0x08, 0x2c, 0x51, 0x68, 0x6a, 0xf5, 0x19,  
+0x6a, 0x57, 0x77, 0x4e, 0xc6, 0x55, 0xbf, 0xaa, 0x05, 0x42, 0xaa, 0xbf, 0xf8, 0x4d, 0xc5, 0x03,  
+0x97, 0x65, 0x67, 0xca, 0x52, 0xd3, 0xa7, 0x61, 0xb1, 0x01, 0xac, 0xdd, 0x4e, 0xc1, 0x96, 0x70,  
+0xe4, 0xf5, 0xe0, 0x99, 0x28, 0xf5, 0xa0, 0xcf, 0xb2, 0x9e, 0x23, 0x00, 0xf0, 0xd2, 0x18, 0x73,  
+0x30, 0xbb, 0xe4, 0x33, 0xdb, 0x3e, 0xd3, 0x4e, 0x4e, 0x56, 0x12, 0x36, 0x21, 0x28, 0x5d, 0x3b,  
+0x43, 0xe1, 0xf3, 0x9a, 0xd1, 0x2d, 0xad, 0x31, 0xfb, 0x40, 0x9b, 0x57, 0xb2, 0xb5, 0x9f, 0x6e,  
+0x8e, 0x39, 0xff, 0x57, 0x20, 0xd2, 0x44, 0xb8, 0xa3, 0x49, 0xfb, 0x31, 0x81, 0xd1, 0x30, 0x81,  
+0xce, 0x02, 0x01, 0x01, 0x30, 0x28, 0x30, 0x14, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04,  
+0x03, 0x13, 0x09, 0x54, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x31, 0x02, 0x10, 0x68, 0x99,  
+0x65, 0xc8, 0xe3, 0xb6, 0xbd, 0x81, 0x45, 0x85, 0x00, 0x61, 0x17, 0x34, 0x2e, 0xde, 0x30, 0x0d,  
+0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05, 0x00, 0x30, 0x0d, 0x06,  
+0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x04, 0x81, 0x80, 0x92,  
+0xe1, 0x78, 0xb6, 0x81, 0x2d, 0xfd, 0x8f, 0xb1, 0x44, 0xfb, 0xdc, 0xc1, 0xf5, 0x0e, 0x11, 0xde,  
+0xfd, 0x38, 0xcd, 0x83, 0x59, 0xf2, 0xb9, 0x50, 0xe4, 0xb6, 0x98, 0x0f, 0x75, 0xbc, 0x60, 0xe2,  
+0x1c, 0xa0, 0x0f, 0x01, 0xb0, 0xcc, 0xe6, 0x75, 0x3b, 0xba, 0xe2, 0x4f, 0x8e, 0x58, 0xe0, 0x93,  
+0x3a, 0xa7, 0xf2, 0xe1, 0x77, 0x5c, 0xf6, 0xc0, 0xd0, 0x31, 0x68, 0x77, 0x2b, 0x36, 0xa7, 0x91,  
+0x31, 0xf6, 0x1a, 0x7a, 0x3c, 0x85, 0x07, 0xcc, 0x8d, 0x12, 0x2a, 0x0c, 0xa6, 0xd9, 0x68, 0x83,  
+0x32, 0x8b, 0x66, 0x7d, 0x7d, 0xda, 0x11, 0x2a, 0x20, 0x14, 0xd6, 0x75, 0x89, 0xc2, 0x02, 0x31,  
+0xf5, 0x5a, 0x51, 0x59, 0x94, 0xbe, 0x46, 0x52, 0xe1, 0x6c, 0x43, 0x5f, 0x5c, 0x5d, 0x3b, 0xe4,  
+0xce, 0xa5, 0x8f, 0x51, 0xcf, 0xb1, 0x94, 0x82, 0xe8, 0x6a, 0x86, 0x3b, 0xba, 0xd1, 0xec, 0x30,  
+0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39
+};
+
+STATIC EFI_GUID mVarVendorGuid = {0x15EDF297, 0xE832, 0x4d30, {0x82, 0x00, 0xA5, 0x25, 0xA9, 0x31, 0xE3, 0x3E}};
+
+EFI_STATUS
+AuthVariableDERConfTest (
+  IN EFI_BB_TEST_PROTOCOL       *This,
+  IN VOID                       *ClientInterface,
+  IN EFI_TEST_LEVEL             TestLevel,
+  IN EFI_HANDLE                 SupportHandle
+  )
+{
+  EFI_STATUS                          Status;
+  EFI_RUNTIME_SERVICES                *RT;
+  EFI_STANDARD_TEST_LIBRARY_PROTOCOL  *StandardLib;
+  EFI_TEST_RECOVERY_LIBRARY_PROTOCOL  *RecoveryLib;
+  EFI_TEST_LOGGING_LIBRARY_PROTOCOL   *LoggingLib;
+  UINT32                              Attr;
+  EFI_TEST_ASSERTION                  Result;
+  UINTN                               Index;
+  UINTN                               MaximumVariableStorageSize;
+  UINTN                               RemainingVariableStorageSize;
+  UINTN                               MaximumVariableSize;
+  UINT32                              AttrArray[] = {
+    //
+    //  For 1 attribute.
+    //
+    EFI_VARIABLE_NON_VOLATILE,
+    EFI_VARIABLE_BOOTSERVICE_ACCESS,
+    EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS,
+
+    //
+    //  For 2 attributes.
+    //
+    EFI_VARIABLE_NON_VOLATILE | EFI_VARIABLE_BOOTSERVICE_ACCESS,
+    EFI_VARIABLE_NON_VOLATILE | EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS,
+
+    EFI_VARIABLE_RUNTIME_ACCESS | EFI_VARIABLE_BOOTSERVICE_ACCESS,
+
+    EFI_VARIABLE_BOOTSERVICE_ACCESS | EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS,
+
+    //
+    //  For 3 attributes.
+    //
+    EFI_VARIABLE_NON_VOLATILE | EFI_VARIABLE_RUNTIME_ACCESS | EFI_VARIABLE_BOOTSERVICE_ACCESS,
+    EFI_VARIABLE_NON_VOLATILE | EFI_VARIABLE_BOOTSERVICE_ACCESS | EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS,
+    EFI_VARIABLE_RUNTIME_ACCESS | EFI_VARIABLE_BOOTSERVICE_ACCESS | EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS,
+
+    //
+    //  For 4 attributes.
+    //
+    EFI_VARIABLE_NON_VOLATILE | EFI_VARIABLE_RUNTIME_ACCESS | EFI_VARIABLE_BOOTSERVICE_ACCESS | EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS,
+  };
+
+  Status = GetTestSupportLibrary (
+             SupportHandle,
+             &StandardLib,
+             &RecoveryLib,
+             &LoggingLib
+             );
+  if (EFI_ERROR(Status)) {
+    return Status;
+  }
+
+  RT = (EFI_RUNTIME_SERVICES *)ClientInterface;
+
+  Attr = EFI_VARIABLE_NON_VOLATILE | 
+         EFI_VARIABLE_RUNTIME_ACCESS | 
+         EFI_VARIABLE_BOOTSERVICE_ACCESS |
+         EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS;
+
+  Status = RT->SetVariable(
+                 L"AuthVarDER", 
+                 &mVarVendorGuid, 
+                 Attr, 
+                 sizeof(mInvalidAuthVarDERCreate), 
+                 (VOID*) mInvalidAuthVarDERCreate
+                 );
+  if (Status == EFI_SECURITY_VIOLATION) {
+    Result = EFI_TEST_ASSERTION_PASSED;
+  } else {
+    Result = EFI_TEST_ASSERTION_FAILED;
+  }
+  StandardLib->RecordAssertion (
+                 StandardLib,
+                 Result,
+                 gVariableServicesBbTestConformanceAssertionGuid019,
+                 L"RT.SetVariable - Set Invalid Time Base Auth Variable",
+                 L"%a:%d:Status - %r",
+                 __FILE__,
+                 (UINTN)__LINE__,
+                 Status
+                 );
+
+  for (Index = 0; Index < sizeof (AttrArray) / sizeof (AttrArray[0]); Index = Index + 1) {
+    Attr = AttrArray[Index];
+    Attr |= EFI_VARIABLE_AUTHENTICATED_WRITE_ACCESS;
+
+    Status = RT->SetVariable (
+                   L"AuthVarDER",
+                   &mVarVendorGuid,
+                   Attr,
+                   sizeof (mValidAuthVarDERCreate),
+                   (VOID *) mValidAuthVarDERCreate
+                   );
+    if (Status == EFI_UNSUPPORTED) {
+      Result = EFI_TEST_ASSERTION_PASSED;
+    } else {
+      Result = EFI_TEST_ASSERTION_FAILED;
+    }
+
+    StandardLib->RecordAssertion (
+                   StandardLib,
+                   Result,
+                   gVariableServicesBbTestConformanceAssertionGuid020,
+                   L"RT.SetVariable - Set Auth Variable with valid cert.",
+                   L"Attributes = Array[%d]. %a:%d:Status - %r",
+                   Index,
+                   __FILE__,
+                   (UINTN)__LINE__,
+                   Status
+                   );
+
+    Status = RT->SetVariable (
+                   L"AuthVarDER",
+                   &mVarVendorGuid,
+                   Attr,
+                   sizeof (mInvalidAuthVarDERCreate),
+                   (VOID *) mInvalidAuthVarDERCreate
+                   );
+    if (Status == EFI_UNSUPPORTED) {
+      Result = EFI_TEST_ASSERTION_PASSED;
+    } else {
+      Result = EFI_TEST_ASSERTION_FAILED;
+    }
+
+    StandardLib->RecordAssertion (
+                   StandardLib,
+                   Result,
+                   gVariableServicesBbTestConformanceAssertionGuid023,
+                   L"RT.SetVariable - Set Auth Variable with invalid cert.",
+                   L"Attributes = Array[%d]. %a:%d:Status - %r",
+                   Index,
+                   __FILE__,
+                   (UINTN)__LINE__,
+                   Status
+                   );
+
+    Status = RT->QueryVariableInfo (
+                   Attr,
+                   &MaximumVariableStorageSize,
+                   &RemainingVariableStorageSize,
+                   &MaximumVariableSize
+                   );
+
+    if (Status == EFI_UNSUPPORTED) {
+      Result = EFI_TEST_ASSERTION_PASSED;
+    } else {
+      Result = EFI_TEST_ASSERTION_FAILED;
+    }
+
+    StandardLib->RecordAssertion (
+                   StandardLib,
+                   Result,
+                   gVariableServicesBbTestConformanceAssertionGuid024,
+                   L"RT.QueryVariableInfo - Query Auth Variable.",
+                   L"Attributes = Array[%d]. %a:%d:Status - %r",
+                   Index,
+                   __FILE__,
+                   (UINTN)__LINE__,
+                   Status
+                   );
+
+  }
+
+  return EFI_SUCCESS;
+}
diff --git a/uefi-sct/SctPkg/TestInfrastructure/SCT/Drivers/StandardTest/StandardTest.c b/uefi-sct/SctPkg/TestInfrastructure/SCT/Drivers/StandardTest/StandardTest.c
index 84025457..543a480c 100644
--- a/uefi-sct/SctPkg/TestInfrastructure/SCT/Drivers/StandardTest/StandardTest.c
+++ b/uefi-sct/SctPkg/TestInfrastructure/SCT/Drivers/StandardTest/StandardTest.c
@@ -1085,7 +1085,10 @@ Returns:
 
   } else {
     StslWriteLogFile (Private, DashLine);
-    
+
+    SctSPrint (Buffer, EFI_MAX_PRINT_BUFFER, L"Arm ACS Version: %s\n", L""ACS_VERSION);
+    StslWriteLogFile (Private, Buffer);
+
     SctSPrint (Buffer, EFI_MAX_PRINT_BUFFER, L"%s\n", Private->EntryName);
     StslWriteLogFile (Private, Buffer);
     SctSPrint (Buffer, EFI_MAX_PRINT_BUFFER, L"Revision 0x%08x\n", Private->TestRevision);
